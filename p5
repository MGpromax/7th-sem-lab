import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.mixture import GaussianMixture
import sklearn.metrics as metrics

# Remove the 'names' parameter and let pandas infer column names
dataset = pd.read_csv("/iris.csv")

# Assuming the last column is the class column
X = dataset.iloc[:, :-1]
label = {'Iris-setosa': 0, 'Iris-versicolor': 1, 'Iris-virginica': 2}
y = [label[c] for c in dataset.iloc[:, -1]]

plt.figure(figsize=(14, 7))
colormap = np.array(['red', 'lime', 'black'])

# REAL PLOT
plt.subplot(1, 3, 1)
plt.title('Real')
plt.scatter(X.iloc[:, 2], X.iloc[:, 3], c=colormap[y])  # Assuming Petal Length is in the third column and Petal Width is in the fourth column

# K-PLOT
model = KMeans(n_clusters=3, random_state=0).fit(X)
plt.subplot(1, 3, 2)
plt.title('KMeans')
plt.scatter(X.iloc[:, 2], X.iloc[:, 3], c=colormap[model.labels_])
print('The accuracy score of K-Mean: ', metrics.accuracy_score(y, model.labels_))
print('The Confusion matrixof K-Mean:\n', metrics.confusion_matrix(y, model.labels_))

# GMM PLOT
gmm = GaussianMixture(n_components=3, random_state=0).fit(X)
y_cluster_gmm = gmm.predict(X)
plt.subplot(1, 3, 3)
plt.title('GMM Classification')
plt.scatter(X.iloc[:, 2], X.iloc[:, 3], c=colormap[y_cluster_gmm])
print('The accuracy score of EM: ', metrics.accuracy_score(y, y_cluster_gmm))
print('The Confusion matrix of EM:\n ', metrics.confusion_matrix(y, y_cluster_gmm))

plt.show()
